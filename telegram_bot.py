import telebot
from telebot import types
import json
from datetime import datetime

# –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
BOT_TOKEN = "6644637602:AAEVKKrYraoHa9Wm1augxMrWYSK8I8K-HEw"
# URL –≤–∞—à–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∑–∞–ø–∏—Å–∏
BOOKING_URL = "https://yabuzuk.github.io/clinerkipr/booking.html"
# ID –∫–∞–Ω–∞–ª–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∑–∞—è–≤–æ–∫ (—Å–æ–∑–¥–∞–π—Ç–µ –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–∞–Ω–∞–ª)
BOOKINGS_CHANNEL = "-1003161238645"
# ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
ADMIN_ID = "407457753"

bot = telebot.TeleBot(BOT_TOKEN)

@bot.message_handler(commands=['myid'])
def get_my_id(message):
    bot.send_message(
        message.chat.id,
        f"–í–∞—à Telegram ID: {message.from_user.id}"
    )

@bot.message_handler(commands=['test_channel'])
def test_channel(message):
    try:
        bot.send_message(BOOKINGS_CHANNEL, "üß™ –¢–µ—Å—Ç –∫–∞–Ω–∞–ª–∞ - –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!")
        bot.send_message(message.chat.id, "‚úÖ –ö–∞–Ω–∞–ª —Ä–∞–±–æ—Ç–∞–µ—Ç!")
    except Exception as e:
        bot.send_message(message.chat.id, f"‚ùå –û—à–∏–±–∫–∞ –∫–∞–Ω–∞–ª–∞: {e}")

@bot.message_handler(commands=['get_chat_id'])
def get_chat_id(message):
    bot.send_message(
        message.chat.id,
        f"ID —ç—Ç–æ–≥–æ —á–∞—Ç–∞: {message.chat.id}"
    )

@bot.message_handler(commands=['ping'])
def ping(message):
    bot.send_message(message.chat.id, "üèì –ü–æ–Ω–≥! –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç")
    print(f"Ping –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id}")

@bot.message_handler(commands=['test_send'])
def test_send(message):
    if str(message.from_user.id) != ADMIN_ID:
        return
    
    test_data = {
        'name': '–¢–µ—Å—Ç',
        'phone': '89999999999',
        'date': '2025-10-20',
        'time': '10:00',
        'service': 'general',
        'area': '50',
        'address': '–¢–µ—Å—Ç–æ–≤—ã–π –∞–¥—Ä–µ—Å',
        'notes': '–¢–µ—Å—Ç'
    }
    
    booking_id = f"TEST{datetime.now().strftime('%H%M%S')}"
    
    channel_message = f"""
üÜî #{booking_id}
üë§ {test_data['name']}
üìû {test_data['phone']}
üìÖ {test_data['date']} {test_data['time']}
üßπ {test_data['service']}
üìê {test_data['area']} –º¬≤
üìç {test_data['address']}
üìù {test_data['notes']}
‚è∞ {datetime.now().strftime('%d.%m.%Y %H:%M')}
üîÑ –¢–µ—Å—Ç
"""
    
    try:
        result = bot.send_message(BOOKINGS_CHANNEL, channel_message)
        bot.send_message(message.chat.id, f"‚úÖ –¢–µ—Å—Ç —É—Å–ø–µ—à–µ–Ω! ID: {result.message_id}")
        print(f"–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –∫–∞–Ω–∞–ª")
    except Exception as e:
        bot.send_message(message.chat.id, f"‚ùå –û—à–∏–±–∫–∞: {e}")
        print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ –∫–∞–Ω–∞–ª: {e}")

@bot.message_handler(commands=['start'])
def start_message(message):
    markup = types.InlineKeyboardMarkup()
    
    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É Web App –¥–ª—è –∑–∞–ø–∏—Å–∏
    web_app = types.WebAppInfo(url=BOOKING_URL)
    booking_btn = types.InlineKeyboardButton(
        text="üìÖ –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–ª–∏–Ω–∏–Ω–≥", 
        web_app=web_app
    )
    markup.add(booking_btn)
    
    bot.send_message(
        message.chat.id,
        "üßπ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∫–ª–∏–Ω–∏–Ω–≥–æ–≤—É—é –∫–æ–º–ø–∞–Ω–∏—é!\n\n"
        "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –¥–ª—è –∑–∞–ø–∏—Å–∏ –Ω–∞ —É—Å–ª—É–≥–∏ –∫–ª–∏–Ω–∏–Ω–≥–∞.\n"
        "–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã.",
        reply_markup=markup
    )

@bot.message_handler(func=lambda message: True)
def debug_all_messages(message):
    print(f"–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: {message.content_type} –æ—Ç {message.from_user.id}")
    if hasattr(message, 'web_app_data') and message.web_app_data:
        print(f"Web App Data: {message.web_app_data.data}")
    # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –¥–∞–ª—å—à–µ

@bot.message_handler(content_types=['web_app_data'])
def handle_booking_data(message):
    print(f"=== –ü–û–õ–£–ß–ï–ù–´ –î–ê–ù–ù–´–ï WEB APP ===")
    print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {message.from_user.id}")
    print(f"–°—ã—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ: {message.web_app_data.data}")
    data = json.loads(message.web_app_data.data)
    print(f"–û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: {data}")
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º ID –∑–∞—è–≤–∫–∏
    booking_id = f"B{datetime.now().strftime('%Y%m%d%H%M%S')}"
    
    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∫–∞–Ω–∞–ª–∞ (–±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö)
    channel_message = f"""
üÜî #{booking_id}
üë§ {data.get('name', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}
üìû {data.get('phone', '–ù–µ —É–∫–∞–∑–∞–Ω')}
üìÖ {data.get('date', '–ù–µ —É–∫–∞–∑–∞–Ω–∞')} {data.get('time', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}
üßπ {data.get('service', '–ù–µ —É–∫–∞–∑–∞–Ω–∞')}
üìê {data.get('area', '–ù–µ —É–∫–∞–∑–∞–Ω–∞')} –º¬≤
üìç {data.get('address', '–ù–µ —É–∫–∞–∑–∞–Ω')}
üìù {data.get('notes', '–ù–µ—Ç')}
‚è∞ {datetime.now().strftime('%d.%m.%Y %H:%M')}
üîÑ –ù–æ–≤–∞—è
"""
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∫–∞–Ω–∞–ª
    print(f"–ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ –∫–∞–Ω–∞–ª: {BOOKINGS_CHANNEL}")
    try:
        result = bot.send_message(BOOKINGS_CHANNEL, channel_message)
        print(f"–£—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –∫–∞–Ω–∞–ª: {result.message_id}")
    except Exception as e:
        print(f"–û–®–ò–ë–ö–ê –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ –∫–∞–Ω–∞–ª: {e}")
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç—É
    try:
        bot.send_message(
            message.chat.id,
            f"‚úÖ –ó–∞—è–≤–∫–∞ #{booking_id} –ø—Ä–∏–Ω—è—Ç–∞!\n"
            "–ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è."
        )
        print(f"–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∫–ª–∏–µ–Ω—Ç—É")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–ª–∏–µ–Ω—Ç—É: {e}")
    
    print("=== –û–ë–†–ê–ë–û–¢–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê ===")

@bot.message_handler(commands=['admin'])
def admin_panel(message):
    if str(message.from_user.id) != ADMIN_ID:
        return
    
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton("üìã –í—Å–µ –∑–∞—è–≤–∫–∏", callback_data="view_all"))
    markup.add(types.InlineKeyboardButton("üîç –ü–æ–∏—Å–∫ –ø–æ –¥–∞—Ç–µ", callback_data="search_date"))
    markup.add(types.InlineKeyboardButton("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="stats"))
    
    bot.send_message(
        message.chat.id,
        "üîß –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å:\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=markup
    )

@bot.callback_query_handler(func=lambda call: True)
def handle_admin_callbacks(call):
    if str(call.from_user.id) != ADMIN_ID:
        return
    
    if call.data == "view_all":
        bot.send_message(
            call.message.chat.id,
            "üìã –í—Å–µ –∑–∞—è–≤–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –∫–∞–Ω–∞–ª–µ:\n" + BOOKINGS_CHANNEL
        )
    elif call.data == "search_date":
        bot.send_message(
            call.message.chat.id,
            "üîç –î–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ –¥–∞—Ç–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–æ–∏—Å–∫ –≤ –∫–∞–Ω–∞–ª–µ:\n" + BOOKINGS_CHANNEL
        )
    elif call.data == "stats":
        bot.send_message(
            call.message.chat.id,
            "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —á–µ—Ä–µ–∑ –ø—Ä–æ—Å–º–æ—Ç—Ä –∫–∞–Ω–∞–ª–∞:\n" + BOOKINGS_CHANNEL
        )

# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞—è–≤–∫–∞–º–∏
@bot.message_handler(commands=['update_status'])
def update_booking_status(message):
    if str(message.from_user.id) != ADMIN_ID:
        return
    
    # –§–æ—Ä–º–∞—Ç: /update_status B20241201120000 –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞
    try:
        parts = message.text.split(' ', 2)
        booking_id = parts[1]
        new_status = parts[2]
        
        bot.send_message(
            message.chat.id,
            f"‚úÖ –°—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏ #{booking_id} –æ–±–Ω–æ–≤–ª–µ–Ω –Ω–∞: {new_status}\n\n"
            f"–û–±–Ω–æ–≤–∏—Ç–µ —Å—Ç–∞—Ç—É—Å –≤ –∫–∞–Ω–∞–ª–µ {BOOKINGS_CHANNEL} –≤—Ä—É—á–Ω—É—é."
        )
    except:
        bot.send_message(
            message.chat.id,
            "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ:\n"
            "/update_status B20241201120000 –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞"
        )

if __name__ == "__main__":
    # –£–¥–∞–ª—è–µ–º webhook –µ—Å–ª–∏ –æ–Ω –∞–∫—Ç–∏–≤–µ–Ω
    bot.remove_webhook()
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    bot.polling(none_stop=True)